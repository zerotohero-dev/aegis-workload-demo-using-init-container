#
# .-'_.---._'-.
# ||####|(__)||   Protect your secrets, protect your business.
#   \\()|##//       Secure your sensitive data with Aegis.
#    \\ |#//                  <aegis.z2h.dev>
#     .\_/.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: aegis-workload-demo
  namespace: default
  labels:
    app.kubernetes.io/name: aegis-workload-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: aegis-workload-demo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aegis-workload-demo
    spec:
      serviceAccountName: aegis-workload-demo
      containers:
      - name: main
        image: z2hdev/aegis-workload-demo-using-init-container:0.12.55
        env:
          - name: SECRET
            valueFrom:
              secretKeyRef:
                name: aegis-secret-aegis-workload-demo
                key: VALUE

      initContainers:
      #
      # To make the init container exit successfully and initialize the main
      # container above, execute the following in Aegis Sentinel:
      #
      #   kubectl exec $sentinelPodName -n aegis-system -- aegis \
      #   -w aegis-workload-demo
      #   -s '{"username":"admin","password":"AegisRocks"}'
      #   -t '{"USER":"{{.username}}", "PASS":"{{.password}}"}"
      #   -f json
      #   -e
      #   -k
      #
      # ☝️ this will create a Kubernetes Secret that the `main` container is
      # injecting as an environment variable, and let the container consume
      # that Secret.
      #
      # -k : means Aegis will update an associated Kubernetes Secret.
      # -t : will be used to transform the fields of the payload given by -s
      #      into a key-value-pair to be injected into the `Data` portion of
      #      that Kubernetes Secret. If `-t` is not given, Aegis Sentinel
      #      will dump argument that is passed to `-s` into `Secret.data.VALUE`
      #      of the Kubernetes Secret as a plain text value.
      #      When provided, `-t` also transforms the secrets that the workloads
      #      consume through Aegis SDK, or Aegis Sidecar.
      #      When `-t` is provided, both `-s` and `-t` must resolve to flat
      #      JSONs whose keys and values are strings.
      #
      # -f json: means that Aegis API will present the value of the secret as
      #          a JSON object. Alternatively `-f yaml` will present it as YAML.
      #          When not provided, this setting defaults to `none` (*which will
      #          display the value as is without any transformation*). If there
      #          exists a `-t`, it will be honored while creating keys and
      #          values. If not, Aegis Safe will assume an identity
      #          transformation.
      #
      # -e: means the values of the secrets will be encrypted via the Aegis Safe
      #     public key before sending them to Aegis. This is especially useful
      #     if you want to save these keys on disk securely outside the cluster
      #     (such as a CI environment).
      #
      # Note that some of these flags and options are still work in progress
      # and are subject to change.
      - name: init-container
        image: z2hdev/aegis-init-container:0.12.55
        #
        # Resource allocation will highly-depend on the system.
        # Benchmark your deployment, monitor your resource utilization, and
        # adjust these values accordingly.
        #
        # resources:
        #  requests:
        #    memory: "128Mi"
        #    cpu: "250m"
        #  limits:
        #    memory: "128Mi"
        #    # We recommend “NOT” setting a CPU limit.
        #    # As long as you have configured your CPU “requests” correctly,
        #    # everything would work fine.
        #
        volumeMounts:
          # Volume mount for SPIRE unix domain socket.
          - name: spire-agent-socket
            mountPath: /spire-agent-socket
            readOnly: true
        #
        # You can configure this workload by providing environment variables.
        #
        # See https://aegis.z2h.dev/docs/configuration for more information
        # about these environment variables.
        #
        # When you don’t explicitly provide env vars here, Aegis Safe will assume
        # the default values outlined in the given link above.
        #
        env:
          - name: SPIFFE_ENDPOINT_SOCKET
            value: "unix:///spire-agent-socket/agent.sock"
          - name: AEGIS_LOG_LEVEL
            value: "6"
          - name: AEGIS_WORKLOAD_SVID_PREFIX
            value: "spiffe://aegis.z2h.dev/workload/"
          - name: AEGIS_SAFE_SVID_PREFIX
            value: "spiffe://aegis.z2h.dev/workload/aegis-safe/ns/aegis-system/sa/aegis-safe/n/"
      volumes:
      # Using SPIFFE CSI Driver to bind to the SPIRE Agent Socket
      # ref: https://github.com/spiffe/spiffe-csi
      - name: spire-agent-socket
        csi:
          driver: "csi.spiffe.io"
          readOnly: true
